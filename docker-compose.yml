services:
  backend:
    image: mikechatzis/hackatumtsichallenge:backend
    ports:
      - "8085:8080"
    restart: no
    depends_on:
      - postgres
  scenariorunner:
    image: mikechatzis/hackatumtsichallenge:scenariorunner
    ports:
      - "8090:8090"
    restart: always
    depends_on:
      - backend
      - frontend
      - postgres
  postgres:
    image: postgres:13-alpine
    hostname: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tsi
    ports:
      - "5432:5432"
    restart: no
  frontend:
    image: mikechatzis/hackatumtsichallenge:frontend
    ports:
      - "9000:9000"
    restart: no
    depends_on:
      - backend
  fastapi:
    image: python:3.10-slim
    working_dir: /python
    volumes:
      - ./python:/python  # Mount your local code directory
    ports:
      - "8000:8000"
    environment:
      - BACKEND_URL=http://backend:8085
      - SCENARIORUNNER_URL=http://scenariorunner:8090
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=tsi
      - FRONTEND_URL=http://frontend:9000
    command: >
      bash -c "pip install fastapi uvicorn httpx sqlalchemy psycopg2-binary ortools pydantic requests &&
              uvicorn endpoint:app --host 0.0.0.0 --port 8000 --reload"
    depends_on:
      - backend
      - scenariorunner
      - postgres
      - frontend
  nextjs:
    image: node:22
    working_dir: /web
    volumes:
      - ./web:/web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_HOST=host.docker.internal
    command: >
      bash -c "npm install &&
              npm run dev"

networks:
  default:
    driver: bridge
